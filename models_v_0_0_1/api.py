from typing import final
from pydantic import BaseModel
from .registry import register_base_model_class


################################################################################################################
################################################################################################################
################################################################################################################


@final
@register_base_model_class
class URLConfigurationResponse(BaseModel):
    api_version: str = ""
    endpoints: dict[str, str] = {}
    deprecated: bool = False
    notice: str = ""


################################################################################################################
################################################################################################################
################################################################################################################


@final
@register_base_model_class
class ChatActionRequest(BaseModel):
    content: str = ""


@final
@register_base_model_class
class ChatActionResponse(BaseModel):
    message: str = ""


################################################################################################################
################################################################################################################
################################################################################################################


@final
@register_base_model_class
class AnalyzeActionRequest(BaseModel):
    content: str = ""


@final
@register_base_model_class
class AnalyzeActionResponse(BaseModel):
    message: str = ""


################################################################################################################
################################################################################################################
################################################################################################################
